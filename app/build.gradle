apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    Properties versionProps = new Properties()
    def versionPropsFile = file("${project.rootDir}/version.properties")
    versionProps.load(new FileInputStream(versionPropsFile))
    def value = 0
    def runTasks = gradle.startParameter.taskNames
    if ('assemble' in runTasks || 'assembleRelease' in runTasks) {
        value = 1
    }
    def versionMajor = 1
    def versionPatch = versionProps['VERSION_PATCH'].toInteger() + 1
    def versionBuild = versionProps['VERSION_BUILD'].toInteger()
    def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

    if (versionPatch % 100 == 0) {
        versionBuild += 1
        versionPatch = 1
    }

    versionProps['VERSION_PATCH'] = versionPatch.toString()
    versionProps['VERSION_BUILD'] = versionBuild.toString()
    versionProps['VERSION_NUMBER'] = versionNumber.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        applicationId "com.frestoinc.gojekassignment"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode versionNumber
        versionName "${versionMajor}.${versionPatch}.${versionBuild}(${versionNumber})"
        archivesBaseName = versionName
        setProperty("archivesBaseName", "${applicationId}-v${versionName}")
        multiDexEnabled true
        javaCompileOptions.annotationProcessorOptions {
            arguments['dagger.android.experimentalUseStringKeys'] = 'true'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
            resValue "string", "app_version", "${defaultConfig.versionName}${".debug"}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            debuggable = false
            shrinkResources true
            resValue "string", "app_version", "${defaultConfig.versionName}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    lintOptions {
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    sourceSets {
        main.res.srcDirs += 'src/main/res_flags'
        main {
            java.srcDirs = ['src/main/java']
        }
    }
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '8.24'
}

task checkstyle(type: Checkstyle) {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    classpath = files()
    ignoreFailures = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
    implementation 'androidx.work:work-runtime:2.3.0'
    implementation 'androidx.concurrent:concurrent-futures:1.0.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    /**
     * TEST LIBRARIES
     */
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /**
     * Gson
     */
    def gson_version = "2.8.6"
    implementation "com.google.code.gson:gson:$gson_version"

    /**
     *  ROOM
     */
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    //implementation "androidx.room:room-rxjava2:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    /**
     *  RxAndroid
     */
    def rx_android_version = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    /**
     *  RxJava
     */
    def rx_java_version = "2.2.17"
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"

    /**
     *  Materials
     */
    def materials_version = "1.0.0"
    implementation "com.google.android.material:material:$materials_version"

    /**
     *  LiveData and ViewModel
     */
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    /**
     *  Dagger 2 Core and Android
     */
    def dagger_version = "2.24"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    /**
     * Retrofit
     */
    def retrofit_version = "2.7.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    /**
     * OkHttp3
     */
    /**
     *  OkHttp3
     */
    def okhttp_version = "3.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
}
